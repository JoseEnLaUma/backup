1. SELECT P.NOMBRE, P.APELLIDO1, P.APELLIDO2 FROM PROFESORES P, DEPARTAMENTOS D WHERE D.CODIGO = P.DEPARTAMENTO AND UPPER (D.NOMBRE) LIKE '%LENGUAJES%'

2.

3. SELECT P.NOMBRE, P.APELLIDO1, P.APELLIDO2, FLOOR ((SYSDATE-ANTIGUEDAD)/7) "Antiguedad", NEXT_DAY (SYSDATE-1, TO_CHAR(antiguedad, 'day'))
FROM PROFESORES P JOIN DEPARTAMENTOS D ON (P.DEPARTAMENTO = D.CODIGO)
WHERE UPPER (D.NOMBRE) LIKE 'INGENIERIA DE COMUNICACIONES';

4.

5.

6. SELECT A1.NOMBRE "nombre 1", TRUNC(MONTHS_BETWEEN (SYSDATE, A1.FECHA_NACIMIENTO)/12) "edad 1", A2.NOMBRE "nombre 2", TRUNC(MONTHS_BETWEEN(SYSDATE, A1.FECHA_NACIMIENTO)/12) "edad 2"
FROM ALUMNOS A1, ALUMNOS A2
WHERE A1.DNI < A2.DNI AND UPPER (A1.APELLIDO1) = UPPER (A2.APELLIDO1);

7.

8.

9.

10.

11.

12.

13. SELECT A.NOMBRE, A.APELLIDO1, A.APELLIDO2
FROM DEPARTAMENTOS D JOIN PROFESORES P ON (D.CODIGO = P.DEPARTAMENTO)
JOIN IMPARTIR I ON (P.ID = I.PROFESOR)
JOIN MATRICULAR M ON (M.ASIGNATURA = I.ASIGNATURA AND M.GRUPO = I.GRUPO AND M.CURSO = I.CURSO)
JOIN ALUMNOS A ON (A.DNI = M.ALUMNO)
WHERE UPPER (D.NOMBRE) LIKE 'LENGUAJES Y CIENCIAS DE LA COMPUTACION'
ORDER BY A.APELLIDO1, A.APELLIDO2, A.NOMBRE;

14.

15.

16.

17. SELECT EMAIL FROM PROFESORES
WHERE EMAIL IS NOT NULL
UNION ALL
SELECT EMAIL
FROM ALUMNOS
WHERE EMAIL IS NOT NULL;

18.

19.

20.

21. SELECT ASI.NOMBRE, I.PROFESOR
FROM ASIGNATURAS ASI LEFT OUTER JOIN IMPARTIR I ON (ASI.CODIGO = I.ASIGNATURA)
WHERE NVL (ASI.CREDITOS, 0) <> NVL (ASI.PRACTICOS, 0)+ NVL (ASI.TEORICOS, 0);
